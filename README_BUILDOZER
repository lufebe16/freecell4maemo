
Funktioniert immer oder wieder nicht.

1) geht nur mit java-8-vm (android sdkmanager!). d.h. eselect java-vm list  ... und ev. set ...

2) stürzt bei jnius setup ab:

Meldung:

[DEBUG]:   cwd is /home/lb/PRG/Python/Kivy/freecell/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/pyjnius-sdl2/armeabi-v7a__ndk_target_21/pyjnius
[INFO]:    Trying first build of pyjnius to get cython files: this is expected to fail
[DEBUG]:   -> running python3 setup.py build_ext -v
[DEBUG]:   	Traceback (most recent call last):
[DEBUG]:   	  File "/home/lb/PRG/Python/Kivy/freecell/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/pyjnius-sdl2/armeabi-v7a__ndk_target_21/pyjnius/setup.py", line 70, in <module>
[DEBUG]:   	    assert JAVA.is_jdk(), "You need a JDK, we only found a JRE. Try setting JAVA_HOME"
[DEBUG]:   	AssertionError: You need a JDK, we only found a JRE. Try setting JAVA_HOME
Exception in thread background thread for pid 109014:

(...dann folgefehler.)

aber wir haben ein JDK ! - wird openjdk nicht als JDK erkannt, warum ?

3) der gleiche fehler tritt auch mit meiner scriptbasierten lösung auf.
-> Es liegt also and p4a, nicht an buildozer.

4) Das Problem liegt bei gentoo und bei p4a:

Die java commands in /usr/bin verweisen auf ein script in /usr/libexec/<script>
Ueblicherweise führt dann der aufrufer das script aus welches das command mit
dem linknamen findet und ausführt. p4a jedoch ergänzt das linkziel (das ein
script ist) einfach mit ../bin/javac sodass /usr/libexec/<script>/bin/javac
aufgerufen wird. Was kein gültiger pfad ist.

Damit buildozer nun javac findet wurde ein direkter link zum javac in
./ENV10/bin angelegt. (virtualenv muss sowieso gestartet werden)

Aber es gibt noch weitere probleme ....

5) der abschliessende gradle-build stürzt ab. Mit der Meldung er braucht
mindesten Java 11. Installiert ist jedoch 8 (bzw.1.8).
Wenn ich jedoch 11 installiere läuft p4a bereits in der Anfangsphase in eine
ClassNotFound exception. p4a setzt java 8 voraus!.

so what?

6) Es war notwendig für gradle das android api auf den neuesten
wert zu setzen. Dies ist momentan 32 (android 11). Damit das aber
wirksam wird muss zuerst buildozer android clean aufgerufen werden,
damit der prozess wieder von vorne läuft.

7) Die Einfachste Lösung ist, im buildozer.spez nur die lokalen
Gegebenheiten zu spezifizieren. ndk und sdk können beim default
belassen werden. Buildozer lädt diese von Google und alles
funktioniert. Das ist zwar eine Doppelspurigkeit mit Android Studio.
Aber dafür schont es die Nerven.
